# Generated by Django 2.2.8 on 2020-07-07 07:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


def forwards_func(apps, schema_editor, elidible=True):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    db_alias = schema_editor.connection.alias
    Layer = apps.get_model("geocontrib", "Layer")
    BaseMap = apps.get_model("geocontrib", "BaseMap")
    ContextLayer = apps.get_model("geocontrib", "ContextLayer")

    for layer in Layer.objects.using(db_alias).all():
        if layer.project:
            base_map, created = BaseMap.objects.using(db_alias).get_or_create(
                project=layer.project,
                defaults={'title': "Fond synchronisé"}
            )
            ContextLayer.objects.using(db_alias).create(
                order=layer.order,
                base_map=base_map,
                layer=layer
            )


class Migration(migrations.Migration):

    dependencies = [
        ('geocontrib', '0002_auto_20200218_1343'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Titre')),
            ],
            options={
                'verbose_name': 'Fond cartographique',
                'verbose_name_plural': 'Fonds cartographiques',
            },
        ),
        migrations.AlterModelOptions(
            name='layer',
            options={'verbose_name': 'Couche', 'verbose_name_plural': 'Couches'},
        ),
        migrations.RunPython(forwards_func, elidable=True),
        migrations.RemoveField(
            model_name='layer',
            name='order',
        ),
        migrations.RemoveField(
            model_name='layer',
            name='project',
        ),
        migrations.CreateModel(
            name='ContextLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name="Numéro d'ordre")),
                ('opacity', models.DecimalField(decimal_places=2, default=1, max_digits=3, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(0)], verbose_name='Opacité')),
                ('base_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geocontrib.BaseMap')),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geocontrib.Layer')),
            ],
            options={
                'verbose_name': 'Liaison Fond-Couche',
                'verbose_name_plural': 'Liaison Fond-Couche',
                'unique_together': {('base_map', 'order')},
            },
        ),
        migrations.AddField(
            model_name='basemap',
            name='layers',
            field=models.ManyToManyField(through='geocontrib.ContextLayer', to='geocontrib.Layer'),
        ),
        migrations.AddField(
            model_name='basemap',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geocontrib.Project'),
        ),
    ]
